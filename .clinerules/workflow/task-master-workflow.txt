---
description: Workflow guide for developing and maintaining the Star Map application, reflecting Copilot and current project standards.
globs: *.html, *.css, *.js
alwaysApply: true
---

- **Development Workflow Process**
  - Edit project files: `index.html`, `style.css`, `main.js`, `config.js`, `interaction.js`, `layoutConfig.js`, `poi.js`, `sceneSetup.js`, `stars.js`, `utils.js`, `logger.js`, `state.js`, `events.js`, `mobile.css`, `types.ts.bak`
  - Edit CSS in `css/`: `base.css`, `bottom-sheet.css`, `components.css`, `header-footer.css`
  - Use `references/` for documentation and reference files.
  - Open `index.html` in a web browser to view changes and test functionality.
  - Use browser developer tools (console, elements, network) for debugging and inspection.
  - Utilize Git for version control (committing changes, creating branches, pushing to remote).

- **Coding Standards (Copilot):**
  - Use ES Modules (`import …`) – never `require`.
  - Prefer async/await; avoid `.then` chains.
  - 2-space indentation, semicolons on, single quotes.
  - All SQL must be parameterised (use `pg` tagged templates).
  - Never log JWTs or secrets.
  - When using terminal commands, format for PowerShell.
  - When installing dependencies, ensure they are not installed within the application directory.
  - Add concise, annotated summaries for all changes.
  - Reference the main README.md for project context.

- **Viewing Changes**
  - After saving changes to HTML, CSS, or JavaScript files, refresh the browser page displaying `index.html`.

- **Debugging**
  - Use `console.log()` statements in JavaScript for outputting information.
  - Set breakpoints in the browser's developer tools to step through JavaScript code execution.
  - Inspect elements and styles using the browser's developer tools.

---

## Implementation Instructions

1. Place this file at the indicated path inside `.clinerules/workflow/`.
2. Run **“Cline: Reload Rules”** in VS Code or restart the Cline LSP/CLI so it picks up changes.
3. Edit the `globs` pattern above if your project structure differs significantly (though the current pattern `*.html, *.css, *.js` should cover most relevant files).
4. Keep this guideline file under version control so the team shares the same conventions.
