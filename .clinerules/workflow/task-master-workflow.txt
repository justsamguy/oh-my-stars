---
description: Workflow guide for developing the Star Map application.
globs: *.html, *.css, *.js
alwaysApply: true
---

- **Development Workflow Process**
  - Edit project files: `index.html`, `style.css`, `main.js`, `config.js`, `interaction.js`, `layoutConfig.js`, `poi.js`, `sceneSetup.js`, `stars.js`, `utils.js`.
  - Open `index.html` in a web browser to view changes and test functionality.
  - Use browser developer tools (console, elements, network) for debugging and inspection.
  - Utilize Git for version control (committing changes, creating branches, pushing to remote).

- **Project Structure**
  - `index.html`: Main HTML file.
  - `style.css`: Stylesheet for the application.
  - `main.js`: Entry point and core logic.
  - `config.js`: Configuration settings.
  - `interaction.js`: Handles user interactions.
  - `layoutConfig.js`: Configuration for layout.
  - `poi.js`: Logic for Points of Interest.
  - `sceneSetup.js`: Sets up the 3D scene (if applicable).
  - `stars.js`: Logic related to stars.
  - `utils.js`: Utility functions.
  - `references/`: Directory for reference materials.

- **Viewing Changes**
  - After saving changes to HTML, CSS, or JavaScript files, refresh the browser page displaying `index.html`.

- **Debugging**
  - Use `console.log()` statements in JavaScript for outputting information.
  - Set breakpoints in the browser's developer tools to step through JavaScript code execution.
  - Inspect elements and styles using the browser's developer tools.

---

## Implementation Instructions

1. Place this file at the indicated path inside `.clinerules/workflow/`.
2. Run **“Cline: Reload Rules”** in VS Code or restart the Cline LSP/CLI so it picks up changes.
3. Edit the `globs` pattern above if your project structure differs significantly (though the current pattern `*.html, *.css, *.js` should cover most relevant files).
4. Keep this guideline file under version control so the team shares the same conventions.
